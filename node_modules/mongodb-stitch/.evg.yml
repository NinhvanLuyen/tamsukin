functions:
  "fetch_source":
    - command: git.get_project
      params:
        directory: "stitch-js-sdk"

  "setup_mongod":
    - command: shell.exec
      params:
        script: |
          set -v
          curl --silent ${mongodb_url} | tar xvz
    - command: shell.exec
      params:
        background: true
        script: |
          set -v
          cd mongodb-*
          echo "starting mongod..."
          mkdir db_files
          ./bin/mongod --dbpath ./db_files --port 27017 &
          echo "waiting for mongod to start up"
    - command: shell.exec
      params:
        script: |
          set -e
          cd mongodb-*
          ./bin/mongo --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:27017"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."

  "setup_stitch":
    - command: shell.exec
      params:
        script: |
          set -e
          echo "cloning stitch"
          mkdir -p src/github.com/10gen
          git clone git@github.com:10gen/stitch src/github.com/10gen/stitch

          echo "downloading libmongo"
          wget --quiet "https://s3.amazonaws.com/stitch-tools/libmongo.so"
          chmod +x libmongo.so
    - command: shell.exec
      params:
        background: true
        script: |
          export GOPATH=`pwd`
          export PATH="`pwd`:$PATH"
          export STITCH_PATH=$GOPATH/src/github.com/10gen/stitch
          cd stitch-js-sdk/test/bin
          echo "running stitch"
          go run $STITCH_PATH/cmd/server/main.go --configFile ../conf/test_config.json

tasks:
  - name: run_tests
    commands:
      - func: "fetch_source"
      - func: "setup_mongod"
      - func: "setup_stitch"
      - command: shell.exec
        params:
          script: |
            set -e
            echo "running client tests"
            cd stitch-js-sdk
            npm install
            npm test

  - name: dist
    depends_on:
      - name: run_tests
    commands:
      - func: "fetch_source"
      - command: shell.exec
        params:
          script: |
            set -e
            cd stitch-js-sdk
            npm install
            npm run build
            npm run build-web
            npm run build-web-dev
            mkdir tmp
            cd tmp
            npm pack ../
            mv mongodb-stitch-*.tgz mongodb-stitch.tgz

      - command: s3.put
        params:
          aws_key: ${sdks_aws_key}
          aws_secret: ${sdks_aws_secret}
          local_file: stitch-js-sdk/dist/web/stitch.js
          remote_file: js/library/${version_id}/stitch.js
          bucket: stitch-sdks
          permissions: public-read
          content_type: application/javascript
          display_name: Stitch Javascript Library for Web

      - command: s3.put
        params:
          aws_key: ${sdks_aws_key}
          aws_secret: ${sdks_aws_secret}
          local_file: stitch-js-sdk/dist/web/stitch.min.js
          remote_file: js/library/${version_id}/stitch.min.js
          bucket: stitch-sdks
          permissions: public-read
          content_type: application/javascript
          display_name: Stitch Javascript Library for Web (minified)

      - command: s3.put
        params:
          aws_key: ${sdks_aws_key}
          aws_secret: ${sdks_aws_secret}
          local_file: stitch-js-sdk/tmp/mongodb-stitch.tgz
          remote_file: js/npm/${version_id}/stitch.tgz
          bucket: stitch-sdks
          permissions: public-read
          content_type: application/gzip
          display_name: Stitch NPM package

  - name: docs_dist
    patchable: false
    depends_on:
      - name: run_tests
    commands:
      - func: "fetch_source"
      - command: shell.exec
        params:
          script: |
            set -e
            cd stitch-js-sdk
            npm install
            npm run docs

      - command: shell.exec
        params:
          script: |
            set -e
            echo "setting up AWS CLI"
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            ./awscli-bundle/install -b ~/bin/aws
            echo "uploading docs for ${branch_name}/${revision}"

      - command: shell.exec
        params:
          silent: true
          script: |
            set -e
            export PATH=$HOME/bin:$PATH
            export AWS_ACCESS_KEY_ID=${sdks_aws_key}
            export AWS_SECRET_ACCESS_KEY=${sdks_aws_secret}
            aws s3 cp stitch-js-sdk/docs s3://stitch-sdks/js/docs/${revision} --recursive --acl public-read
            aws s3 cp stitch-js-sdk/docs s3://stitch-sdks/js/docs/${branch_name} --recursive --acl public-read

buildvariants:
- name: linux-64
  display_name: Linux-64
  run_on:
    - baas-linux
  expansions:
    mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.4.tgz
  tasks:
    - name: run_tests
    - name: dist
    - name: docs_dist
